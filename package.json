{
  "name": "admin-panel",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@ant-design/dark-theme": "2.0.2",
    "@react-hook/window-size": "3.0.6",
    "@reduxjs/toolkit": "1.4.0",
    "antd": "^4.4.0",
    "antd-dayjs-jalali": "1.0.28",
    "axios": "0.19.2",
    "connected-react-router": "6.8.0",
    "cross-env": "7.0.2",
    "dayjs": "1.8.29",
    "debounce": "1.2.0",
    "eslint-config-prettier": "6.11.0",
    "eslint-plugin-prettier": "3.1.4",
    "file-saver": "2.0.2",
    "fontfaceobserver": "2.1.0",
    "history": "4.10.1",
    "husky": "4.2.5",
    "i18next": "19.5.2",
    "i18next-browser-languagedetector": "5.0.0",
    "i18next-icu": "1.4.2",
    "jest-styled-components": "7.0.2",
    "lint-staged": "10.2.11",
    "node-plop": "0.26.0",
    "plop": "2.7.1",
    "query-string": "6.13.1",
    "react": "16.13.1",
    "react-app-polyfill": "1.0.6",
    "react-component-export-image": "0.1.6",
    "react-dom": "16.13.1",
    "react-helmet-async": "1.0.6",
    "react-i18next": "11.7.0",
    "react-lottie": "1.2.3",
    "react-redux": "7.2.0",
    "react-router-dom": "5.2.0",
    "react-scripts": "3.4.1",
    "react-scrollbars-custom": "4.0.25",
    "react-test-renderer": "16.13.1",
    "recharts": "1.8.5",
    "redux-injectors": "1.3.0",
    "redux-saga": "1.1.3",
    "sanitize.css": "11.0.1",
    "serve": "11.3.2",
    "shelljs": "0.8.4",
    "styled-components": "5.1.1",
    "stylelint": "13.6.1",
    "stylelint-config-recommended": "3.0.0",
    "stylelint-config-styled-components": "0.1.1",
    "stylelint-processor-styled-components": "1.10.0",
    "ts-node": "8.10.2",
    "typescript": "^3.9.5",
    "xlsx": "0.16.3"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "5.11.0",
    "@testing-library/react": "10.4.3",
    "@types/fontfaceobserver": "0.0.6",
    "@types/history": "4.7.6",
    "@types/jest": "26.0.3",
    "@types/node": "14.0.14",
    "@types/react": "16.9.41",
    "@types/react-dom": "16.9.8",
    "@types/react-helmet": "6.0.0",
    "@types/react-lottie": "1.2.5",
    "@types/react-redux": "7.1.9",
    "@types/react-router-dom": "5.1.5",
    "@types/react-test-renderer": "16.9.2",
    "@types/recharts": "1.8.13",
    "@types/styled-components": "5.1.0",
    "@types/testing-library__jest-dom": "5.9.1",
    "@types/webpack-env": "1.15.2",
    "babel-plugin-import": "1.13.0",
    "customize-cra": "1.0.0",
    "eslint-plugin-simple-import-sort": "5.0.3",
    "less": "3.11.3",
    "less-loader": "6.2.0",
    "prettier": "2.0.5",
    "react-app-rewired": "2.1.6"
  },
  "scripts": {
    "start": "react-app-rewired start",
    "build": "react-app-rewired build",
    "test": "react-app-rewired test",
    "eject": "react-scripts eject",
    "test:generators": "ts-node --project=./internals/ts-node.tsconfig.json ./internals/testing/test-generators.ts",
    "start:prod": "yarn build && serve -s build",
    "checkTs": "tsc --noEmit",
    "eslint": "eslint --ext js,ts,tsx",
    "lint": "yarn eslint -- src",
    "lint:fix": "yarn eslint -- --fix src",
    "lint:css": "stylelint src/**/*.css",
    "generate": "cross-env TS_NODE_PROJECT='./internals/ts-node.tsconfig.json' plop --plopfile internals/generators/plopfile.ts",
    "cleanExampleApp": "ts-node --project=./internals/ts-node.tsconfig.json ./internals/scripts/clean.ts",
    "prettify": "prettier --write"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "engines": {
    "npm": ">=6.4.1",
    "node": ">=10.13.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "npm run eslint -- --fix"
    ],
    "*.{ts,tsx}": [
      "npm run checkTs"
    ],
    "*.{md,json}": [
      "prettier --write"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*/*.d.ts",
      "!src/**/*/Loadable.{js,jsx,ts,tsx}",
      "!src/**/*/types.ts",
      "!src/index.tsx",
      "!src/serviceWorker.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    }
  }
}
